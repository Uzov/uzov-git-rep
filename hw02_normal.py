__author__ = 'Юзов Евгений Борисович'

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]
import math

var_list = [2, -5, 8, 9, -25, 25, 4]
var_list_result = []
for itm in var_list:
    if itm > 0 and (math.sqrt(itm)).is_integer():
        var_list_result.append(int(math.sqrt(itm)))
print(var_list_result)

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

import pymorphy2 # первый раз установка нетривиальна
# import num2words # это чтобы число превращать в строку (числительное)

var_date = '11.06.1973'
day_tens = var_date [0]
day_ones = var_date [1]
month = var_date [3:5]
year = var_date [6:10]
dict_month = {"01": "январь", "02": "февраль", "03": "март", "04": "апрель", "05": "май", "06": "июнь",
       "07": "июль", "08": "август", "09": "сентябрь", "10": "октябрь", "11": "ноябрь", "12": "декабрь"
       }
dict_date_tens = {"2":"двадцать", "3":"тридцать"}
dict_date_ones = {"1":'первое', "2":'второе', "3":'третье', "4":'четвертое', "5":'пятое', "6":'шестое', "7":'седьмое',
                  "8":'восьмое', "9":'девятое', "10":'десятое', "11":'одиннадцатое', "12":'двенадцатое', "13":'тринадцатое',
                  "14":'четырнадцатое', "15":'пятнадцатое', "16":'шестнадцатое', "17":'семнадцатое', "18":'восемнадцатое',
                  "19":'девятнадцатое'
                  }
day_tens_str = ''
if int(day_tens) is 1:
    day_ones = day_ones + day_tens
elif int(day_tens) is 2:
    day_tens_str = dict_date_tens['2']
elif int(day_tens) is 3:
    day_tens_str = dict_date_tens['3']
morph=pymorphy2.MorphAnalyzer()
month_str = morph.parse(dict_month[str(month)])[0]
# day_ones_str = num2words.num2words(day_ones, lang = 'ru') -
# выводит числительное, но долго разбираться как, например, "один" превратить в "первое". Тогда не нужен словарь "dict_date_ones"
day_ones_str = dict_date_ones [day_ones]
print('{0} {1} {2} {3} года'.format(day_tens_str, day_ones_str, month_str.inflect({'sing', 'gent'}).word, year))

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

import random
var_list = list()
n = 10
while n:
    var_list.append(random.randint(-100, 100))
    n -= 1
print(var_list)

# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

lst = [1, 2, 4, 5, 6, 2, 5, 2]
lst1 = [1, 25, 2, 4, 5, 6, 2, 5, 2, 3, 6, 7, 25, 3, 4, 3]
lst_unique = list(set(lst))
lst_repeat = list()
for i in range(len(lst1)):
    for j in range(i + 1, len(lst1)):
        if lst1[i] == lst1[j]:
             lst_repeat.append(lst1[i])
print(lst_unique)
print(list(set(lst_repeat)))